import{_ as a,o as d,c as l,b as e,d as s,a as i}from"./app-b1fe8d4e.js";const t="/23032301.png",r={},c=e("div",{class:"custom-container tip"},[e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])]),e("p",{class:"custom-container-title"},"前情提要"),e("ol",null,[e("li",null,"开发中的项目需要进行前后端联调, 故申请了两个服务器用于项目测试、上线。"),e("li",null,"在部署第一个服务器环境时遇到了一些坑, 特此记录。")])],-1),o=i(`<h2 id="一、环境需求" tabindex="-1"><a class="header-anchor" href="#一、环境需求" aria-hidden="true">#</a> 一、环境需求</h2><ol><li>nodejs</li><li>nginx</li></ol><h2 id="二、部署过程" tabindex="-1"><a class="header-anchor" href="#二、部署过程" aria-hidden="true">#</a> 二、部署过程</h2><h3 id="_1-vim缺失-报错bash-vim-command-not-found" tabindex="-1"><a class="header-anchor" href="#_1-vim缺失-报错bash-vim-command-not-found" aria-hidden="true">#</a> 1. vim缺失 报错bash vim: command not found<br></h3><p>首先检查系统是否完整安装vim<br> 执行一下命令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>rpm -qa|grep vim
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果完整安装, 会显示如下三行:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vim-enhanced-7.0.109-7.el5
vim-minimal-7.0.109-7.el5
vim-common-7.0.109-7.el5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果少了其中的某一条, 就用以下命令来安装(示例为缺少第一条)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum -y install vim-enhanced
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果上面的三条一条都沒有返回, 可以直接用以下命令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum -y install vim* 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-nvm安装" tabindex="-1"><a class="header-anchor" href="#_2-nvm安装" aria-hidden="true">#</a> 2. NVM安装</h3><p>对于nodejs安装, 采用nvm进行版本控制<br></p><p>nvm下载</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cd /
wget https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.3.tar.gz
mkdir -p /.nvm
tar -zxvf v0.39.3.tar.gz -C /.nvm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vim ~/.bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在文件末尾添加(注意修改nvm路径中的版本号)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export NVM_DIR=&quot;/.nvm/nvm-0.39.3&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm
[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让配置文件生效</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>source ~/.bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>打开命令行, 执行nvm -v命令后, 出现版本号, 则证明安装成功。</p><h3 id="_3-nvm的使用——nodejs版本控制" tabindex="-1"><a class="header-anchor" href="#_3-nvm的使用——nodejs版本控制" aria-hidden="true">#</a> 3. nvm的使用——nodejs版本控制</h3><ol><li>查询目前线上所能安装的所有nodejs版本</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nvm ls-remote
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>安装响应版本nodejs</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nvm install 16.14.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>使用相应版本nodejs</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nvm use 16.14.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>列出已经安装的版本</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nvm ls
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>卸载相应的nodejs</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nvm uninstall 16.14.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6"><li>查看当前版本</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nvm current
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-安装gcc" tabindex="-1"><a class="header-anchor" href="#_4-安装gcc" aria-hidden="true">#</a> 4. 安装gcc</h3><p>执行以下命令进行安装</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum -y install gcc-c++
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-安装nginx" tabindex="-1"><a class="header-anchor" href="#_5-安装nginx" aria-hidden="true">#</a> 5. 安装nginx</h3><p>创建nginx目录, 进入目录后操作</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mkdir nginx
cd nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>一、 安装nginx依赖: pcre</p><ol><li>下载pcre</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget http://downloads.sourceforge.net/project/pcre/pcre/8.37/pcre-8.37.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>解压pcre</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>tar -xzpvf pcre-8.37.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>进入pcre-8.37 执行命令:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./configure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>执行命令:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>make &amp;&amp; make install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>验证pcre是否成功(出现版本号即为成功):</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pcre-config --version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>二、安装 openssl 、zlib 、 gcc 依赖:</p><ol><li>安装命令:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum -y install make zlib zlib-devel gcc-c++ libtool openssl openssl-devel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>三、安装nginx</p><ol><li>进入之前创建的nginx目录, 下载nginx:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget http://nginx.org/download/nginx-1.20.1.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>解压nginx:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>tar -zxvf nginx-1.20.1.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>进入nginx-1.20.1目录, 执行:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./configure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>编译:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>make &amp;&amp; make install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>四、启动nginx</p><ol><li>进入/usr/local/nginx/sbin, 启动nginx:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cd /usr/local/nginx/sbin
./nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>查看nginx是否启动:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ps -ef | grep nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>查找nginx占用端口:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>netstat -anp|grep xxxxx(上一步第二列第一行)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>五、访问nginx 浏览器输入服务器ip出现&quot;Welcome to nginx&quot;界面即为成功</p><p>六、建立软连接 如果我们此时输入nginx -v会提示command not found<br> 我们需要去/usr/bin目录下创建一个软连接, 索引到nginx的安装目录里。</p><ol><li>查找名为nginx的路径</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo find / -name nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>得到以下结果<br><img src="`+t+`" alt=""> 然后复制上级目录为/sbin的路径, 使用建立软连接的代码</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ln -s /usr/local/nginx/sbin/nginx /usr/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在查看一次版本号</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nginx -v
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>出现版本号即为成功</p><h3 id="_6-配置nginx" tabindex="-1"><a class="header-anchor" href="#_6-配置nginx" aria-hidden="true">#</a> 6. 配置nginx</h3><ol><li>停止nginx服务</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nginx -s stop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>找到nginx的配置文件</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>whereis nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,86),v={start:"3"},u=e("li",null,"cd到该目录下, 其中nginx.conf就是默认配置文件",-1),m=["src"],g=e("li",null,"重启nginx",-1),x=i(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nginx -s reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时会报错2: No such file or directory<br> 解决办法:<br></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf
nginx -s reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>至此再次访问ip地址, 便能访问到部署的项目了。</p>`,4);function p(n,b){return d(),l("div",null,[c,o,e("ol",v,[u,e("li",null,[s("使用vim编辑nginx.conf, 修改root后面目录为前端dist文件夹地址 "),e("img",{src:n.$withBase("/image/23032302.png")},null,8,m)]),g]),x])}const _=a(r,[["render",p],["__file","web0to1.html.vue"]]);export{_ as default};
