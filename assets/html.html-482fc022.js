import{_ as d,r as a,o as l,c as i,b as e,d as o,e as n,a as c}from"./app-b1fe8d4e.js";const r={},s=c(`<h2 id="一、初识html" tabindex="-1"><a class="header-anchor" href="#一、初识html" aria-hidden="true">#</a> 一、初识HTML</h2><h3 id="_1-概念" tabindex="-1"><a class="header-anchor" href="#_1-概念" aria-hidden="true">#</a> 1.概念</h3><p>HTML全称叫做HyperText Markup Language 超文本标记语言。</p><p>主要负责描述页面的语义。</p><p>在前端三件套(HTML CSS JS)中扮演&quot;骨架&quot;的角色。</p><p>需要明确的是HTML不是一门编程语言, 他是一种用于定义内容结构的标记语言。他由一系列的元素组成, 这些元素可以用来包围不同部分的内容, 使其以某种方式呈现或者工作。</p><h3 id="_2-基础结构" tabindex="-1"><a class="header-anchor" href="#_2-基础结构" aria-hidden="true">#</a> 2.基础结构</h3><p>在VSCode中, 新建一个拓展名为html的文件, 输入&quot;!&quot;然后回车, 你就会看到如下页面。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;UTF-8&quot;&gt;
  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
  &lt;title&gt;Document&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  
&lt;/body&gt;
&lt;/html&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们来分析一下这个代码</p><p>这里分为四大部分</p><ol><li>第一行为声明文档类型是html。</li><li>第2、12行的<code>&lt;html&gt; &lt;/html&gt;</code>是html页面的根元素, 包裹住所有的内容。</li><li>第3、8行的<code>&lt;head&gt; &lt;/head&gt;</code>是html页面的头, 包含文档的元数据<code>&lt;meta&gt;</code>、文档的标题<code>&lt;tittle&gt;</code>, 我们可以通过<code>&lt;meta&gt;</code>标签设置一些网站的属性, 通过<code>&lt;tittle&gt;</code>来设置网页的标题, 通过<code>&lt;link&gt;</code>来引入外部文件。</li><li>第9、11行的<code>&lt;body&gt; &lt;/body&gt;</code>是html页面的可见内容, 后面构建的&quot;骨骼&quot;都是写在body标签内。</li></ol><h3 id="_3-元素组成" tabindex="-1"><a class="header-anchor" href="#_3-元素组成" aria-hidden="true">#</a> 3.元素组成</h3><ol><li>首先我们来看一个例子<code>&lt;p&gt;Hello world!&lt;/p&gt;</code>, 这个元素的主要部分由：</li></ol><p>开始标签<code>&lt;p&gt;</code>: 包含元素名称(p), 被&lt;&gt;包裹, 表示元素从这里开始。</p><p>结束标签<code>&lt;/p&gt;</code>: 包含元素名称(p), 被&lt;&gt;包裹, 同时元素名称前包含一个斜杠, 表示元素在此结束。</p><p>内容<code>Hello world!</code>: 元素的内容。</p><p>三大部分组成。</p><ol start="2"><li>元素也可以拥有属性, 我们通常写在开始标签内，如<code>&lt;p class=&quot;&quot; id=&quot;&quot; style=&quot;&quot;&gt;Hello world&lt;/p&gt;</code>, 这些属性可以控制元素的样式、行为, 具体用法我们在css、js部分详细说明。</li></ol><h3 id="_4-嵌套元素" tabindex="-1"><a class="header-anchor" href="#_4-嵌套元素" aria-hidden="true">#</a> 4.嵌套元素</h3><p>我们可以将一个元素放置于其他元素之中, 称之为嵌套, <code>&lt;p&gt;I&#39;m &lt;strong&gt;very&lt;/strong&gt; happy&lt;/p&gt;</code>, 会发现句子中的&quot;very&quot;被加粗了。</p><h3 id="_5-空元素" tabindex="-1"><a class="header-anchor" href="#_5-空元素" aria-hidden="true">#</a> 5.空元素</h3><p>我们将不包含任何内容的元素成为空元素, 如<code>&lt;img&gt;</code>元素, 由于他不包含内容, 因此他的组成便简写为<code>&lt;img/&gt;</code>。</p><h2 id="二、行内元素" tabindex="-1"><a class="header-anchor" href="#二、行内元素" aria-hidden="true">#</a> 二、行内元素</h2><p>行内元素设置不能设置宽高, 元素宽高由内容撑大, 相邻的行内元素都会在一行, 即不会自动换行, margin 仅左右方向有效，上下无效，padding 上下左右均有效</p><h3 id="_1-span" tabindex="-1"><a class="header-anchor" href="#_1-span" aria-hidden="true">#</a> 1. <code>&lt;span&gt;</code></h3><p>在我们学习了css之后, 如果我们想依据自己的想法调整内容的大小, 可以将内容用<code>&lt;span&gt;&lt;/span&gt;</code>元素包裹, <code>&lt;span&gt;</code>元素没有任何语义, 非常方便我们用css、js来对其包裹的内容进行调整。</p><h3 id="_2-code" tabindex="-1"><a class="header-anchor" href="#_2-code" aria-hidden="true">#</a> 2. <code>&lt;code&gt;</code></h3><p><code>&lt;code&gt;&lt;/code&gt;</code>元素一般用于包裹代码, 其中的代码不会被浏览器执行。</p><h3 id="_3-斜体-em" tabindex="-1"><a class="header-anchor" href="#_3-斜体-em" aria-hidden="true">#</a> 3. 斜体<code>&lt;em&gt;</code></h3><h3 id="_4-强调-strong" tabindex="-1"><a class="header-anchor" href="#_4-强调-strong" aria-hidden="true">#</a> 4. 强调<code>&lt;strong&gt;</code></h3><h3 id="_5-超链接-a" tabindex="-1"><a class="header-anchor" href="#_5-超链接-a" aria-hidden="true">#</a> 5. 超链接<code>&lt;a&gt;</code></h3><p>如果我们想要访问其他网址, 我们可以通过将文本或其他内容包裹在<code>&lt;a&gt;</code>元素内, 并给他一个<code>herf</code>属性, 就可以创建一个基本链接。 如<code>&lt;a href=&quot;http://www.baidu.com&quot;&gt;点此前往百度&lt;/a&gt;</code></p><h2 id="三、块级元素" tabindex="-1"><a class="header-anchor" href="#三、块级元素" aria-hidden="true">#</a> 三、块级元素</h2><p>块级元素能够使用 css 定义其宽高, 会独占一行, 也就是自动换行, 且对 margin padding 的上下左右设置均有效</p><h3 id="_1-p" tabindex="-1"><a class="header-anchor" href="#_1-p" aria-hidden="true">#</a> 1. <code>&lt;p&gt;</code></h3><p>段落都是由<code>&lt;p&gt;</code>元素标签进行定义。 如<code>&lt;p&gt;我是一个段落，千真万确。&lt;/p&gt;</code>。</p><h3 id="_2-h" tabindex="-1"><a class="header-anchor" href="#_2-h" aria-hidden="true">#</a> 2. <code>&lt;h&gt;</code></h3><p>标题都是包裹在一个标题元素中(h1、h2、h3、h4、h5、h6), 依次表示主标题、二级标题、三级标题、四级标题、五级标题、六级标题。 如<code>&lt;h1&gt;我是文章的主标题&lt;/h1&gt;</code>。</p><h3 id="_3-ul" tabindex="-1"><a class="header-anchor" href="#_3-ul" aria-hidden="true">#</a> 3. <code>&lt;ul&gt;</code></h3><p>无序列表, 每份无序列表都由<code>&lt;ul&gt;</code>开始, 包裹清单上的所以内容, 其中又需要用<code>&lt;li&gt;</code>元素单独包裹每项内容。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;ul&gt;
  &lt;li&gt;吃饭&lt;/li&gt;
  &lt;li&gt;睡觉&lt;/li&gt;
  &lt;li&gt;打豆豆&lt;/li&gt;
&lt;/ul&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-ol" tabindex="-1"><a class="header-anchor" href="#_4-ol" aria-hidden="true">#</a> 4. <code>&lt;ol&gt;</code></h3><p>有序列表, 每份无序列表都由<code>&lt;ol&gt;</code>开始, 包裹清单上的所以内容, 其中又需要用<code>&lt;li&gt;</code>元素单独包裹每项内容。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;ul&gt;
  &lt;li&gt;吃饭&lt;/li&gt;
  &lt;li&gt;睡觉&lt;/li&gt;
  &lt;li&gt;打豆豆&lt;/li&gt;
&lt;/ul&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-div" tabindex="-1"><a class="header-anchor" href="#_5-div" aria-hidden="true">#</a> 5. <code>&lt;div&gt;</code></h3><p><code>&lt;div&gt;</code>同行内元素的<code>&lt;span&gt;</code>一样, 是一个块级无语意元素。</p><h2 id="四、行内块元素" tabindex="-1"><a class="header-anchor" href="#四、行内块元素" aria-hidden="true">#</a> 四、行内块元素</h2><p>不会换行, 但是能够设置宽高</p><h3 id="_1-img" tabindex="-1"><a class="header-anchor" href="#_1-img" aria-hidden="true">#</a> 1. <code>&lt;img&gt;</code></h3><p><code>&lt;img&gt;</code>元素是一个空元素, 需要一个<code>src</code>属性引入图片路径, 例如: <code>&lt;img src=&quot;dinosaur.jpg&quot;&gt;</code>。</p><h3 id="_2-input" tabindex="-1"><a class="header-anchor" href="#_2-input" aria-hidden="true">#</a> 2. <code>&lt;input&gt;</code></h3><p><code>&lt;input&gt;</code>元素通常用于<code>&lt;form&gt;</code>表单元素中, 输入类型通过type属性控制(默认为text), type属性可以为<code>text | button | radio | checkbox | text | number | password</code>等。</p><h3 id="_3-select-、-option" tabindex="-1"><a class="header-anchor" href="#_3-select-、-option" aria-hidden="true">#</a> 3. <code>&lt;select&gt;</code>、<code>&lt;option&gt;</code></h3><p><code>&lt;select&gt;</code>元素表示一个提供菜单的控件, 通常和<code>&lt;option&gt;</code>元素搭配使用。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;select name=&quot;select&quot;&gt;
  &lt;option value=&quot;value1&quot;&gt;Value 1&lt;/option&gt;
  &lt;option value=&quot;value2&quot;&gt;Value 2&lt;/option&gt;
  &lt;option value=&quot;value3&quot;&gt;Value 3&lt;/option&gt;
&lt;/select&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="作业" tabindex="-1"><a class="header-anchor" href="#作业" aria-hidden="true">#</a> 作业</h2><p>使用html仿写此文档。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,59),h={href:"https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web/HTML_basics",target:"_blank",rel:"noopener noreferrer"};function u(g,p){const t=a("ExternalLinkIcon");return l(),i("div",null,[s,e("p",null,[e("a",h,[o("HTML基础"),n(t)])])])}const m=d(r,[["render",u],["__file","html.html.vue"]]);export{m as default};
