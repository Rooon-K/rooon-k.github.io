import{_ as c}from"./boxModel-8f4d84d7.js";import{_ as t,r as a,o as r,c as l,b as e,d,e as i,a as n}from"./app-b1fe8d4e.js";const s={},h=n('<h2 id="三、优先级" tabindex="-1"><a class="header-anchor" href="#三、优先级" aria-hidden="true">#</a> 三、优先级</h2><p>优先级就是分配给指定的 CSS 声明的一个权重, 它由匹配的选择器中的每一种选择器类型的数值决定。 具体如下: <code>!important</code> &gt; 内联样式 &gt; id选择器 &gt; 类选择器、伪类选择器、属性选择器 &gt; 元素选择器、伪元素选择器 &gt; 通配符选择器、后代选择器、兄弟选择器。 权重相同的情况下, 采用后来居上的原则, 即后面的样式会覆盖掉前面相同的样式。 由于<code>!important</code>具有最高优先级, 因此需要谨慎使用:</p><ol><li>优先考虑使用样式规则的优先级来解决问题。</li><li>只在需要覆盖全栈或者外部 CSS 的特定页面使用。</li><li>永远不要在你的插件中使用。</li><li>永远不要在全站范围的 CSS 代码中使用。</li></ol><h2 id="四、继承性" tabindex="-1"><a class="header-anchor" href="#四、继承性" aria-hidden="true">#</a> 四、继承性</h2><p>在 CSS 中部分设置在父元素的属性是可以被子元素继承的。</p><p>可被继承:</p><ul><li>字体相关: <code>font-family</code>、<code>font-style</code>、<code>font-size</code>、<code>font-weight</code> 等。</li><li>文本相关: <code>text-align</code>、<code>text-indent</code>、<code>text-decoration</code>、<code>text-shadow</code>、<code>letter-spacing</code>、<code>word-spacing</code>、<code>white-space</code>、<code>line-height</code>、<code>color</code> 等。</li><li>列表相关: <code>list-style</code>、<code>list-style-image</code>、<code>list-style-type</code>、<code>list-style-position</code> 等。</li><li>其他属性: <code>visibility</code>、<code>cursor</code> 等。</li></ul><p>不可被继承:</p><ul><li><code>inherit</code>: 继承父元素对应属性的计算值。</li><li><code>initial</code>: 应用该属性的默认值, 比如 color 的默认值是 #000。</li><li><code>unset</code>: 如果属性是默认可以继承的, 则取 inherit 的效果, 否则同 initial。</li><li><code>revert</code>: 效果等同于 unset, 兼容性差。</li></ul><h2 id="五、盒子模型" tabindex="-1"><a class="header-anchor" href="#五、盒子模型" aria-hidden="true">#</a> 五、盒子模型</h2><p>在 CSS 中任何元素都可以看成是一个盒子, 而一个盒子是由 4 部分组成的: 内容(content)、内边距(padding)、边框(border)和外边距(margin)。 <img src="'+c+`" alt="box"></p><h2 id="六、背景" tabindex="-1"><a class="header-anchor" href="#六、背景" aria-hidden="true">#</a> 六、背景</h2><ol><li>背景颜色: <code>background-color</code>接收一个color值。</li><li>背景图片: <code>background-image</code>接收一个url。</li><li>控制背景平铺: <code>background-repeat</code>接收<code>no-repeat</code>、<code>repeat-x</code>、<code>repeat-y</code>、<code>repeat</code>。</li><li>控制背景大小: <code>background-size</code>接收长度或百分比值。</li><li>背景图像定位: <code>background-position</code>允许选择背景图像显示在其应用到的盒子中的位置。在其坐标系中, 框的左上角是(0, 0), 框沿水平( x )和垂直( y )轴定位。</li></ol><h2 id="七、边框" tabindex="-1"><a class="header-anchor" href="#七、边框" aria-hidden="true">#</a> 七、边框</h2><p>我们一般使用<code>border</code>为一个盒子添加边框。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// 为四边添加1像素宽的黑色实线
border: 1px solid black;
// 单独为一个边设置
border-top: 1px solid black;
border-bottom: 1px solid black;
border-left: 1px solid black;
border-right: 1px solid black;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,17),p={href:"https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web/CSS_basics",target:"_blank",rel:"noopener noreferrer"},b=e("br",null,null,-1),u={href:"https://juejin.cn/post/6941206439624966152",target:"_blank",rel:"noopener noreferrer"};function _(m,g){const o=a("ExternalLinkIcon");return r(),l("div",null,[h,e("p",null,[e("a",p,[d("CSS基础"),i(o)]),b,e("a",u,[d("稀土掘金:大海我来了"),i(o)])])])}const v=t(s,[["render",_],["__file","css2.html.vue"]]);export{v as default};
