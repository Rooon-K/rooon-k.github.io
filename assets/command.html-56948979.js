import{_ as t,o as d,c as e,a as r}from"./app-b1fe8d4e.js";const o={},c=r(`<p>使用 <code>nest -h</code> 可以查看nestjs的所有命令。</p><p>根据原理图生成或修改文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nest g &lt;schematic&gt; &lt;name&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;schematic&gt;</code></td><td>原理图或集合:生成原理图。可用的示意图见下表。</td></tr><tr><td><code>&lt;name&gt;</code></td><td>生成的组件的名称。</td></tr></tbody></table><p>Schematics</p><table><thead><tr><th>命令</th><th>别名</th><th>描述</th></tr></thead><tbody><tr><td>app</td><td>app</td><td>在 <code>monorepo</code> 中生成新的应用程序</td></tr><tr><td>library</td><td>lib</td><td>在 <code>monorepo</code> 中生成一个新库</td></tr><tr><td>class</td><td>cl</td><td>生成新的类</td></tr><tr><td>configuration</td><td>config</td><td>生成 CLI 配置文件</td></tr><tr><td>controller</td><td>co</td><td>生成控制器声明</td></tr><tr><td>decorator</td><td>d</td><td>生成自定义装饰器</td></tr><tr><td>filter</td><td>f</td><td>生成过滤器声明</td></tr><tr><td>gateway</td><td>ga</td><td>生成网关声明</td></tr><tr><td>guard</td><td>gu</td><td>生成守卫声明</td></tr><tr><td>interceptor</td><td>itc</td><td>生成一个拦截器声明</td></tr><tr><td>interface</td><td>itf</td><td>生成一个接口</td></tr><tr><td>middleware</td><td>mi</td><td>生成中间件声明</td></tr><tr><td>module</td><td>mo</td><td>生成模块声明</td></tr><tr><td>pipe</td><td>pi</td><td>生成管道声明</td></tr><tr><td>provider</td><td>pr</td><td>生成提供者声明</td></tr><tr><td>resolver</td><td>res</td><td>生成新的 CRUD 资源</td></tr><tr><td>service</td><td>s</td><td>生成服务声明</td></tr></tbody></table>`,7),a=[c];function i(n,s){return d(),e("div",null,a)}const p=t(o,[["render",i],["__file","command.html.vue"]]);export{p as default};
